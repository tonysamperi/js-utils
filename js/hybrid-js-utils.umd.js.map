{"version":3,"file":"hybrid-js-utils.umd.js","sources":["../src/model/hybrid-js-utils.model.ts","../src/hybrid-js-utils.ts"],"sourcesContent":["export interface HybridJSUtils {\r\n    isClient: () => boolean;\r\n    htmlCountDown: (duration: number, updateFreq: number, targetEl: HTMLElement) => Promise<number>;\r\n    loadJQuery: (version?: string) => Promise<boolean>;\r\n    logWithStyle: (title: string, msg: string, style?: string) => void;\r\n    addLeadingZeroes: (numeric: number | string) => string;\r\n    isNumeric: (value: string) => boolean;\r\n    isObject: (entity: any) => boolean;\r\n    objectKeysToCamelCase: (source: { [key: string]: any }) => { [key: string]: any };\r\n    randomHex: (length: number) => string;\r\n    randomInt: (min: number, max: number, excludeMin?: boolean | string, excludeMax?: boolean | string) => number;\r\n    randomNumericString: (length: number) => string;\r\n    removeMultipleSpaces: (source: string) => string;\r\n    removeTrailingSlash: (source: string) => string;\r\n    roundNumber: (value: number | string, decimalDigits: number) => number;\r\n    sprintf: (str: string, ...args: string[]) => string;\r\n    toCamelCase: (str: string) => string;\r\n    toSnakeCase: (str: string) => string;\r\n}\r\n\r\nexport function jsVersionError(methodName: string) {\r\n    console.error(`Can't execute \"${methodName}, since you're not using client JS!`);\r\n}\r\n","import {HybridJSUtils, jsVersionError} from \"./model/hybrid-js-utils.model\";\r\n\r\nconst hybridJsUtils: HybridJSUtils = (function () {\r\n\r\n    const lib: HybridJSUtils = {\r\n        addLeadingZeroes(numeric: number | string): string {\r\n            numeric = \"\" + numeric; // Convert to string;\r\n            return (\"00\" + numeric).slice(-2);\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param duration value in milliseconds to wait for\r\n         * @param updateFreq value in milliseconds to refresh\r\n         * @param targetEl a DOM element where the countdown will be appended\r\n         *\r\n         * @returns Promise with last value for counter, to check if everything went ok.\r\n         */\r\n        htmlCountDown(duration: number, updateFreq: number, targetEl: HTMLElement): Promise<number> {\r\n            return new Promise<number>((resolve) => {\r\n                let counter: number = this.roundNumber(duration / 1000, 2);\r\n                const counterDiff = updateFreq / 1000;\r\n                let interval: any;\r\n                const print = () => {\r\n                    counter -= counterDiff;\r\n                    if (counter < 0 || counter < counterDiff) {\r\n                        counter = 0;\r\n                    }\r\n                    targetEl.innerHTML = counter.toFixed(2);\r\n                };\r\n                interval = setInterval(function () {\r\n                    print();\r\n                }, updateFreq);\r\n                setTimeout(() => {\r\n                    clearInterval(interval);\r\n                    print();\r\n                    resolve(counter);\r\n                }, duration);\r\n            });\r\n        },\r\n\r\n        isClient(): boolean {\r\n            return typeof window !== \"undefined\" && !!window.document;\r\n        },\r\n\r\n        loadJQuery(version: string = \"1.12.0\"): Promise<boolean> {\r\n            const isServer = !this.isClient();\r\n            return new Promise<boolean>(function (resolve) {\r\n                if (isServer) {\r\n                    jsVersionError(\"HybridJsUtils.loadJQuery\");\r\n                    resolve(!1);\r\n                    return;\r\n                }\r\n                const jq = document.createElement(\"script\");\r\n                jq.src = `https://ajax.googleapis.com/ajax/libs/jquery/${version}/jquery.min.js`;\r\n                jq.addEventListener(\"load\", function () {\r\n                    console.info(\"jQuery loaded.\");\r\n                    resolve(!0);\r\n                });\r\n                jq.addEventListener(\"error\", function () {\r\n                    console.info(\"jQuery not loaded.\");\r\n                    resolve(!1);\r\n                });\r\n                document.getElementsByTagName(\"head\")[0].appendChild(jq);\r\n            });\r\n        },\r\n\r\n        logWithStyle(title: string, msg: string, style: string = \"\"): void {\r\n            if (this.isClient()) {\r\n                console.group(title || \"\");\r\n                console.log(\"%c\" + msg, style);\r\n                console.groupEnd();\r\n            }\r\n            else {\r\n                console.log(`***** ${title} *****`);\r\n                console.log(msg);\r\n                console.log(`***** ***** *****`);\r\n            }\r\n        },\r\n\r\n        isNumeric(value: string): boolean {\r\n            return !isNaN(parseInt(value, 10));\r\n        },\r\n\r\n        isObject(entity: any): boolean {\r\n            return !!entity && entity === Object(entity) && entity.constructor === Object;\r\n        },\r\n\r\n        objectKeysToCamelCase: (source: { [key: string]: any }): { [key: string]: any } => {\r\n            const result: { [key: string]: any } = {};\r\n            Object.keys(source).forEach((key: string) => {\r\n                // tslint:disable-next-line:max-line-length\r\n                result[lib.toCamelCase(key)] = Object.keys(source[key]).length > 0 && !Array.isArray(source) ? lib.objectKeysToCamelCase(source[key]) : source[key];\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        randomHex(length: number): string {\r\n            const maxlen = 8;\r\n            const min = Math.pow(16, Math.min(length, maxlen) - 1);\r\n            const max = Math.pow(16, Math.min(length, maxlen)) - 1;\r\n            const n = Math.floor(Math.random() * (max - min + 1)) + min;\r\n            let r = n.toString(16);\r\n            while (r.length < length) {\r\n                r = r + this.randomHex(length - maxlen);\r\n            }\r\n            return r;\r\n        },\r\n\r\n        randomInt(min: number, max: number, excludeMin: boolean | string = !1, excludeMax: boolean | string = !1): number {\r\n            if (isNaN(min) || isNaN(max)) {\r\n                console.warn(\"Invalid args for JsUtils.randomInt. Returning random between 0 and 100\");\r\n                return this.randomInt(0, 100);\r\n            }\r\n            // tslint:disable-next-line:triple-equals\r\n            excludeMax = !isNaN(+(excludeMax == \"true\") || +excludeMax); // forces to have true or \"true\"\r\n            // tslint:disable-next-line:triple-equals\r\n            excludeMin = !isNaN(+(excludeMin == \"true\") || +excludeMin); // forces to have true or \"true\"\r\n            excludeMax && max--;\r\n            excludeMin && min++;\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        },\r\n\r\n        randomNumericString: (length: number = 10): string => {\r\n            let i = -1;\r\n            const result = [];\r\n            while (++i < length) {\r\n                result.push(lib.randomInt(0, 5, !0, !0));\r\n            }\r\n            return result.join(\"\");\r\n        },\r\n\r\n        removeMultipleSpaces(source: string): string {\r\n            return source.replace(/\\s\\s+/g, \" \");\r\n        },\r\n\r\n        removeTrailingSlash(source: string): string {\r\n            return source.replace(/\\/$/, \"\");\r\n        },\r\n\r\n        roundNumber(value: number | string, decimalDigits: number = 2): number {\r\n            if (isNaN(+value)) {\r\n                throw new Error(\"HybridJsUtils.roundNumber: invalid value supplied\");\r\n            }\r\n            if (isNaN(+decimalDigits) || decimalDigits < 0 || !Number.isInteger(decimalDigits)) {\r\n                throw new Error(\"HybridJsUtils.roundNumber: decimalDigits must be a positive integer!\");\r\n            }\r\n            const factor = 10 ** decimalDigits;\r\n            return Math.round(+value * factor) / factor;\r\n        },\r\n\r\n        sprintf: (str: string, ...argv: string[]): string => {\r\n            if (typeof str !== typeof \"\") {\r\n                return str;\r\n            }\r\n\r\n            return !argv.length ? str : lib.sprintf(str = str.replace(\"%s\", `${argv.shift()}`), ...argv);\r\n        },\r\n\r\n        toCamelCase: (s: string): string => {\r\n            return s\r\n                .replace(/_/g, \" \")\r\n                .replace(/\\s(.)/g, ($1: string) => {\r\n                    return $1.toUpperCase();\r\n                })\r\n                .replace(/\\s/g, \"\")\r\n                .replace(/^(.)/, ($1: string) => {\r\n                    return $1.toLowerCase();\r\n                });\r\n        },\r\n\r\n        toSnakeCase: (s: string): string => {\r\n            return s\r\n                .replace(/\\.?([A-Z]+)/g, (_x_, y) => {\r\n                    return \"_\" + y.toLowerCase();\r\n                }).replace(/^_/, \"\");\r\n        }\r\n    };\r\n\r\n    return lib;\r\n\r\n})();\r\n\r\nexport {HybridJSUtils} from \"./model/hybrid-js-utils.model\";\r\nexport const isClient = hybridJsUtils.isClient;\r\nexport const htmlCountDown = hybridJsUtils.htmlCountDown;\r\nexport const loadJQuery = hybridJsUtils.loadJQuery;\r\nexport const logWithStyle = hybridJsUtils.logWithStyle;\r\nexport const addLeadingZeroes = hybridJsUtils.addLeadingZeroes;\r\nexport const isNumeric = hybridJsUtils.isNumeric;\r\nexport const isObject = hybridJsUtils.isObject;\r\nexport const objectKeysToCamelCase = hybridJsUtils.objectKeysToCamelCase;\r\nexport const randomHex = hybridJsUtils.randomHex;\r\nexport const randomInt = hybridJsUtils.randomInt;\r\nexport const randomNumericString = hybridJsUtils.randomNumericString;\r\nexport const removeMultipleSpaces = hybridJsUtils.removeMultipleSpaces;\r\nexport const removeTrailingSlash = hybridJsUtils.removeTrailingSlash;\r\nexport const roundNumber = hybridJsUtils.roundNumber;\r\nexport const sprintf = hybridJsUtils.sprintf;\r\nexport const toCamelCase = hybridJsUtils.toCamelCase;\r\nexport const toSnakeCase = hybridJsUtils.toSnakeCase;\r\n"],"names":[],"mappings":"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"}